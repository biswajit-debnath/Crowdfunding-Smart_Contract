(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[177],{6314:(e,t,n)=>{Promise.resolve().then(n.bind(n,5901)),Promise.resolve().then(n.t.bind(n,464,23)),Promise.resolve().then(n.t.bind(n,9324,23))},5901:(e,t,n)=>{"use strict";n.d(t,{$:()=>i,Web3Provider:()=>a});var o=n(5155),r=n(2115),s=n(1054);let l=(0,r.createContext)(void 0);function a(e){let{children:t}=e,[n,a]=(0,r.useState)(!1),[i,u]=(0,r.useState)(null),d=async()=>{if(void 0!==window.ethereum)try{let e=new s.ufN(window.ethereum);await window.ethereum.request({method:"eth_requestAccounts"}),u(e),a(!0),alert("Wallet Connected!")}catch(e){console.error(e),alert("Failed to connect wallet!")}else alert("MetaMask not detected!")};return(0,r.useEffect)(()=>{void 0!==window.ethereum&&window.ethereum.on("accountsChanged",()=>{a(!1),u(null)})},[]),(0,o.jsx)(l.Provider,{value:{isConnected:n,web3:i,connectWallet:d},children:t})}function i(){let e=(0,r.useContext)(l);if(void 0===e)throw Error("useWeb3 must be used within a Web3Provider");return e}},9324:()=>{},464:e=>{e.exports={style:{fontFamily:"'Poppins', 'Poppins Fallback'",fontStyle:"normal"},className:"__className_97b4ee"}}},e=>{var t=t=>e(e.s=t);e.O(0,[361,54,441,517,358],()=>t(6314)),_N_E=e.O()}]);